/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class AOfilesDeclaration extends POfilesDeclaration
{
    private POscope _oscope_;
    private TId _name_;
    private POartifactSet _oartifactSet_;

    public AOfilesDeclaration()
    {
        // Constructor
    }

    public AOfilesDeclaration(
        @SuppressWarnings("hiding") POscope _oscope_,
        @SuppressWarnings("hiding") TId _name_,
        @SuppressWarnings("hiding") POartifactSet _oartifactSet_)
    {
        // Constructor
        setOscope(_oscope_);

        setName(_name_);

        setOartifactSet(_oartifactSet_);

    }

    @Override
    public Object clone()
    {
        return new AOfilesDeclaration(
            cloneNode(this._oscope_),
            cloneNode(this._name_),
            cloneNode(this._oartifactSet_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOfilesDeclaration(this);
    }

    public POscope getOscope()
    {
        return this._oscope_;
    }

    public void setOscope(POscope node)
    {
        if(this._oscope_ != null)
        {
            this._oscope_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oscope_ = node;
    }

    public TId getName()
    {
        return this._name_;
    }

    public void setName(TId node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public POartifactSet getOartifactSet()
    {
        return this._oartifactSet_;
    }

    public void setOartifactSet(POartifactSet node)
    {
        if(this._oartifactSet_ != null)
        {
            this._oartifactSet_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oartifactSet_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._oscope_)
            + toString(this._name_)
            + toString(this._oartifactSet_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._oscope_ == child)
        {
            this._oscope_ = null;
            return;
        }

        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._oartifactSet_ == child)
        {
            this._oartifactSet_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._oscope_ == oldChild)
        {
            setOscope((POscope) newChild);
            return;
        }

        if(this._name_ == oldChild)
        {
            setName((TId) newChild);
            return;
        }

        if(this._oartifactSet_ == oldChild)
        {
            setOartifactSet((POartifactSet) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
