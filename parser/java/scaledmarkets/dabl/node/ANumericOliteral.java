/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class ANumericOliteral extends POliteral
{
    private POnumericLiteral _onumericLiteral_;

    public ANumericOliteral()
    {
        // Constructor
    }

    public ANumericOliteral(
        @SuppressWarnings("hiding") POnumericLiteral _onumericLiteral_)
    {
        // Constructor
        setOnumericLiteral(_onumericLiteral_);

    }

    @Override
    public Object clone()
    {
        return new ANumericOliteral(
            cloneNode(this._onumericLiteral_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANumericOliteral(this);
    }

    public POnumericLiteral getOnumericLiteral()
    {
        return this._onumericLiteral_;
    }

    public void setOnumericLiteral(POnumericLiteral node)
    {
        if(this._onumericLiteral_ != null)
        {
            this._onumericLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._onumericLiteral_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._onumericLiteral_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._onumericLiteral_ == child)
        {
            this._onumericLiteral_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._onumericLiteral_ == oldChild)
        {
            setOnumericLiteral((POnumericLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
