/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class AFilenameOtranslationStmt extends POtranslationStmt
{
    private POstringLiteral _fromString_;
    private POstringLiteral _toString_;

    public AFilenameOtranslationStmt()
    {
        // Constructor
    }

    public AFilenameOtranslationStmt(
        @SuppressWarnings("hiding") POstringLiteral _fromString_,
        @SuppressWarnings("hiding") POstringLiteral _toString_)
    {
        // Constructor
        setFromString(_fromString_);

        setToString(_toString_);

    }

    @Override
    public Object clone()
    {
        return new AFilenameOtranslationStmt(
            cloneNode(this._fromString_),
            cloneNode(this._toString_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFilenameOtranslationStmt(this);
    }

    public POstringLiteral getFromString()
    {
        return this._fromString_;
    }

    public void setFromString(POstringLiteral node)
    {
        if(this._fromString_ != null)
        {
            this._fromString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fromString_ = node;
    }

    public POstringLiteral getToString()
    {
        return this._toString_;
    }

    public void setToString(POstringLiteral node)
    {
        if(this._toString_ != null)
        {
            this._toString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._toString_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fromString_)
            + toString(this._toString_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fromString_ == child)
        {
            this._fromString_ = null;
            return;
        }

        if(this._toString_ == child)
        {
            this._toString_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fromString_ == oldChild)
        {
            setFromString((POstringLiteral) newChild);
            return;
        }

        if(this._toString_ == oldChild)
        {
            setToString((POstringLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
