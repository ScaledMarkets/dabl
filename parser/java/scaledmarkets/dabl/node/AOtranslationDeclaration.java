/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import java.util.*;
import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class AOtranslationDeclaration extends POtranslationDeclaration
{
    private POstringLiteral _os_;
    private final LinkedList<POtranslationStmt> _otranslationStmt_ = new LinkedList<POtranslationStmt>();

    public AOtranslationDeclaration()
    {
        // Constructor
    }

    public AOtranslationDeclaration(
        @SuppressWarnings("hiding") POstringLiteral _os_,
        @SuppressWarnings("hiding") List<?> _otranslationStmt_)
    {
        // Constructor
        setOs(_os_);

        setOtranslationStmt(_otranslationStmt_);

    }

    @Override
    public Object clone()
    {
        return new AOtranslationDeclaration(
            cloneNode(this._os_),
            cloneList(this._otranslationStmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOtranslationDeclaration(this);
    }

    public POstringLiteral getOs()
    {
        return this._os_;
    }

    public void setOs(POstringLiteral node)
    {
        if(this._os_ != null)
        {
            this._os_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._os_ = node;
    }

    public LinkedList<POtranslationStmt> getOtranslationStmt()
    {
        return this._otranslationStmt_;
    }

    public void setOtranslationStmt(List<?> list)
    {
        for(POtranslationStmt e : this._otranslationStmt_)
        {
            e.parent(null);
        }
        this._otranslationStmt_.clear();

        for(Object obj_e : list)
        {
            POtranslationStmt e = (POtranslationStmt) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._otranslationStmt_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._os_)
            + toString(this._otranslationStmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._os_ == child)
        {
            this._os_ = null;
            return;
        }

        if(this._otranslationStmt_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._os_ == oldChild)
        {
            setOs((POstringLiteral) newChild);
            return;
        }

        for(ListIterator<POtranslationStmt> i = this._otranslationStmt_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((POtranslationStmt) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
