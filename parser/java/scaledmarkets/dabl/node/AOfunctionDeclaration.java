/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import java.util.*;
import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class AOfunctionDeclaration extends POfunctionDeclaration
{
    private POscope _oscope_;
    private TId _name_;
    private final LinkedList<POtypeSpec> _otypeSpec_ = new LinkedList<POtypeSpec>();
    private POstringLiteral _targetLanguage_;
    private POstringLiteral _targetName_;
    private final LinkedList<POtypeSpec> _returnType_ = new LinkedList<POtypeSpec>();

    public AOfunctionDeclaration()
    {
        // Constructor
    }

    public AOfunctionDeclaration(
        @SuppressWarnings("hiding") POscope _oscope_,
        @SuppressWarnings("hiding") TId _name_,
        @SuppressWarnings("hiding") List<?> _otypeSpec_,
        @SuppressWarnings("hiding") POstringLiteral _targetLanguage_,
        @SuppressWarnings("hiding") POstringLiteral _targetName_,
        @SuppressWarnings("hiding") List<?> _returnType_)
    {
        // Constructor
        setOscope(_oscope_);

        setName(_name_);

        setOtypeSpec(_otypeSpec_);

        setTargetLanguage(_targetLanguage_);

        setTargetName(_targetName_);

        setReturnType(_returnType_);

    }

    @Override
    public Object clone()
    {
        return new AOfunctionDeclaration(
            cloneNode(this._oscope_),
            cloneNode(this._name_),
            cloneList(this._otypeSpec_),
            cloneNode(this._targetLanguage_),
            cloneNode(this._targetName_),
            cloneList(this._returnType_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOfunctionDeclaration(this);
    }

    public POscope getOscope()
    {
        return this._oscope_;
    }

    public void setOscope(POscope node)
    {
        if(this._oscope_ != null)
        {
            this._oscope_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oscope_ = node;
    }

    public TId getName()
    {
        return this._name_;
    }

    public void setName(TId node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public LinkedList<POtypeSpec> getOtypeSpec()
    {
        return this._otypeSpec_;
    }

    public void setOtypeSpec(List<?> list)
    {
        for(POtypeSpec e : this._otypeSpec_)
        {
            e.parent(null);
        }
        this._otypeSpec_.clear();

        for(Object obj_e : list)
        {
            POtypeSpec e = (POtypeSpec) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._otypeSpec_.add(e);
        }
    }

    public POstringLiteral getTargetLanguage()
    {
        return this._targetLanguage_;
    }

    public void setTargetLanguage(POstringLiteral node)
    {
        if(this._targetLanguage_ != null)
        {
            this._targetLanguage_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._targetLanguage_ = node;
    }

    public POstringLiteral getTargetName()
    {
        return this._targetName_;
    }

    public void setTargetName(POstringLiteral node)
    {
        if(this._targetName_ != null)
        {
            this._targetName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._targetName_ = node;
    }

    public LinkedList<POtypeSpec> getReturnType()
    {
        return this._returnType_;
    }

    public void setReturnType(List<?> list)
    {
        for(POtypeSpec e : this._returnType_)
        {
            e.parent(null);
        }
        this._returnType_.clear();

        for(Object obj_e : list)
        {
            POtypeSpec e = (POtypeSpec) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._returnType_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._oscope_)
            + toString(this._name_)
            + toString(this._otypeSpec_)
            + toString(this._targetLanguage_)
            + toString(this._targetName_)
            + toString(this._returnType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._oscope_ == child)
        {
            this._oscope_ = null;
            return;
        }

        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._otypeSpec_.remove(child))
        {
            return;
        }

        if(this._targetLanguage_ == child)
        {
            this._targetLanguage_ = null;
            return;
        }

        if(this._targetName_ == child)
        {
            this._targetName_ = null;
            return;
        }

        if(this._returnType_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._oscope_ == oldChild)
        {
            setOscope((POscope) newChild);
            return;
        }

        if(this._name_ == oldChild)
        {
            setName((TId) newChild);
            return;
        }

        for(ListIterator<POtypeSpec> i = this._otypeSpec_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((POtypeSpec) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._targetLanguage_ == oldChild)
        {
            setTargetLanguage((POstringLiteral) newChild);
            return;
        }

        if(this._targetName_ == oldChild)
        {
            setTargetName((POstringLiteral) newChild);
            return;
        }

        for(ListIterator<POtypeSpec> i = this._returnType_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((POtypeSpec) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
