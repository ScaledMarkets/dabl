/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class AOrepoDeclaration extends POrepoDeclaration
{
    private POscope _oscope_;
    private TId _name_;
    private POstringLiteral _type_;
    private POstringValueOpt _scheme_;
    private POstringLiteral _path_;
    private POstringValueOpt _userid_;
    private POstringValueOpt _password_;

    public AOrepoDeclaration()
    {
        // Constructor
    }

    public AOrepoDeclaration(
        @SuppressWarnings("hiding") POscope _oscope_,
        @SuppressWarnings("hiding") TId _name_,
        @SuppressWarnings("hiding") POstringLiteral _type_,
        @SuppressWarnings("hiding") POstringValueOpt _scheme_,
        @SuppressWarnings("hiding") POstringLiteral _path_,
        @SuppressWarnings("hiding") POstringValueOpt _userid_,
        @SuppressWarnings("hiding") POstringValueOpt _password_)
    {
        // Constructor
        setOscope(_oscope_);

        setName(_name_);

        setType(_type_);

        setScheme(_scheme_);

        setPath(_path_);

        setUserid(_userid_);

        setPassword(_password_);

    }

    @Override
    public Object clone()
    {
        return new AOrepoDeclaration(
            cloneNode(this._oscope_),
            cloneNode(this._name_),
            cloneNode(this._type_),
            cloneNode(this._scheme_),
            cloneNode(this._path_),
            cloneNode(this._userid_),
            cloneNode(this._password_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrepoDeclaration(this);
    }

    public POscope getOscope()
    {
        return this._oscope_;
    }

    public void setOscope(POscope node)
    {
        if(this._oscope_ != null)
        {
            this._oscope_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oscope_ = node;
    }

    public TId getName()
    {
        return this._name_;
    }

    public void setName(TId node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public POstringLiteral getType()
    {
        return this._type_;
    }

    public void setType(POstringLiteral node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public POstringValueOpt getScheme()
    {
        return this._scheme_;
    }

    public void setScheme(POstringValueOpt node)
    {
        if(this._scheme_ != null)
        {
            this._scheme_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._scheme_ = node;
    }

    public POstringLiteral getPath()
    {
        return this._path_;
    }

    public void setPath(POstringLiteral node)
    {
        if(this._path_ != null)
        {
            this._path_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._path_ = node;
    }

    public POstringValueOpt getUserid()
    {
        return this._userid_;
    }

    public void setUserid(POstringValueOpt node)
    {
        if(this._userid_ != null)
        {
            this._userid_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._userid_ = node;
    }

    public POstringValueOpt getPassword()
    {
        return this._password_;
    }

    public void setPassword(POstringValueOpt node)
    {
        if(this._password_ != null)
        {
            this._password_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._password_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._oscope_)
            + toString(this._name_)
            + toString(this._type_)
            + toString(this._scheme_)
            + toString(this._path_)
            + toString(this._userid_)
            + toString(this._password_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._oscope_ == child)
        {
            this._oscope_ = null;
            return;
        }

        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._scheme_ == child)
        {
            this._scheme_ = null;
            return;
        }

        if(this._path_ == child)
        {
            this._path_ = null;
            return;
        }

        if(this._userid_ == child)
        {
            this._userid_ = null;
            return;
        }

        if(this._password_ == child)
        {
            this._password_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._oscope_ == oldChild)
        {
            setOscope((POscope) newChild);
            return;
        }

        if(this._name_ == oldChild)
        {
            setName((TId) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((POstringLiteral) newChild);
            return;
        }

        if(this._scheme_ == oldChild)
        {
            setScheme((POstringValueOpt) newChild);
            return;
        }

        if(this._path_ == oldChild)
        {
            setPath((POstringLiteral) newChild);
            return;
        }

        if(this._userid_ == oldChild)
        {
            setUserid((POstringValueOpt) newChild);
            return;
        }

        if(this._password_ == oldChild)
        {
            setPassword((POstringValueOpt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
