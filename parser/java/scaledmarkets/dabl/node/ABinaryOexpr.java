/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class ABinaryOexpr extends POexpr
{
    private POexpr _operand1_;
    private PObinaryOp _obinaryOp_;
    private POexpr _operand2_;

    public ABinaryOexpr()
    {
        // Constructor
    }

    public ABinaryOexpr(
        @SuppressWarnings("hiding") POexpr _operand1_,
        @SuppressWarnings("hiding") PObinaryOp _obinaryOp_,
        @SuppressWarnings("hiding") POexpr _operand2_)
    {
        // Constructor
        setOperand1(_operand1_);

        setObinaryOp(_obinaryOp_);

        setOperand2(_operand2_);

    }

    @Override
    public Object clone()
    {
        return new ABinaryOexpr(
            cloneNode(this._operand1_),
            cloneNode(this._obinaryOp_),
            cloneNode(this._operand2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABinaryOexpr(this);
    }

    public POexpr getOperand1()
    {
        return this._operand1_;
    }

    public void setOperand1(POexpr node)
    {
        if(this._operand1_ != null)
        {
            this._operand1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._operand1_ = node;
    }

    public PObinaryOp getObinaryOp()
    {
        return this._obinaryOp_;
    }

    public void setObinaryOp(PObinaryOp node)
    {
        if(this._obinaryOp_ != null)
        {
            this._obinaryOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._obinaryOp_ = node;
    }

    public POexpr getOperand2()
    {
        return this._operand2_;
    }

    public void setOperand2(POexpr node)
    {
        if(this._operand2_ != null)
        {
            this._operand2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._operand2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._operand1_)
            + toString(this._obinaryOp_)
            + toString(this._operand2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._operand1_ == child)
        {
            this._operand1_ = null;
            return;
        }

        if(this._obinaryOp_ == child)
        {
            this._obinaryOp_ = null;
            return;
        }

        if(this._operand2_ == child)
        {
            this._operand2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._operand1_ == oldChild)
        {
            setOperand1((POexpr) newChild);
            return;
        }

        if(this._obinaryOp_ == oldChild)
        {
            setObinaryOp((PObinaryOp) newChild);
            return;
        }

        if(this._operand2_ == oldChild)
        {
            setOperand2((POexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
