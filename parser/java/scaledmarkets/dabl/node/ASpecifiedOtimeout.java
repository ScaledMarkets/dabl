/* This file was generated by SableCC (http://www.sablecc.org/). */

package scaledmarkets.dabl.node;

import scaledmarkets.dabl.analysis.*;

@SuppressWarnings("nls")
public final class ASpecifiedOtimeout extends POtimeout
{
    private POexpr _oexpr_;
    private POtimeUnit _otimeUnit_;

    public ASpecifiedOtimeout()
    {
        // Constructor
    }

    public ASpecifiedOtimeout(
        @SuppressWarnings("hiding") POexpr _oexpr_,
        @SuppressWarnings("hiding") POtimeUnit _otimeUnit_)
    {
        // Constructor
        setOexpr(_oexpr_);

        setOtimeUnit(_otimeUnit_);

    }

    @Override
    public Object clone()
    {
        return new ASpecifiedOtimeout(
            cloneNode(this._oexpr_),
            cloneNode(this._otimeUnit_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASpecifiedOtimeout(this);
    }

    public POexpr getOexpr()
    {
        return this._oexpr_;
    }

    public void setOexpr(POexpr node)
    {
        if(this._oexpr_ != null)
        {
            this._oexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._oexpr_ = node;
    }

    public POtimeUnit getOtimeUnit()
    {
        return this._otimeUnit_;
    }

    public void setOtimeUnit(POtimeUnit node)
    {
        if(this._otimeUnit_ != null)
        {
            this._otimeUnit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._otimeUnit_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._oexpr_)
            + toString(this._otimeUnit_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._oexpr_ == child)
        {
            this._oexpr_ = null;
            return;
        }

        if(this._otimeUnit_ == child)
        {
            this._otimeUnit_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._oexpr_ == oldChild)
        {
            setOexpr((POexpr) newChild);
            return;
        }

        if(this._otimeUnit_ == oldChild)
        {
            setOtimeUnit((POtimeUnit) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
